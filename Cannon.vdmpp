class Cannon is subclass of Piece
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
operations
	public Cannon : seq of nat1 * Color ==> Cannon
		Cannon(a_coord,a_color) ==(
			Piece(a_coord,a_color);
		);
	public canMoveTo : seq of nat1 ==> bool
		canMoveTo(a_coord) ==(
			return (coord(1) - a_coord(1) = 0) or (coord(2) - a_coord(2) = 0 );
			)
			
	pre a_coord <> coord;
	public moveTo : seq of nat1 ==> ()
		moveTo(a_coord) ==(
			coord := a_coord
		)
	pre a_coord <> coord;
	public freeToMove : seq of nat1 * Board ==> bool
	freeToMove(a_coord,board) == (
	
		dcl tempM : nat1;
		dcl tempP : nat1;
		dcl count : nat;
		
		if(board.isEmpty([a_coord(1),a_coord(2)]))
		then(
			if (a_coord(1) - coord(1) =0)
			then(
					if(a_coord(2) > coord(2)) then(
						return (not exists p in set rng board.board  & p <> nil and p.getCoord()(1) = coord(1)  and p.getCoord()(2) in set {coord(2)+1,...,a_coord(2)-1});
					)else(
						return (not exists p in set rng board.board &  p <> nil and p.getCoord()(1) = coord(1)  and  p.getCoord()(2) in set {a_coord(2)+1,...,coord(2)-1});
						)
			)
			else(
					if(a_coord(1) > coord(1)) then(
						return (not exists p in set rng board.board & p <> nil and p.getCoord()(2) = coord(2)  and p.getCoord()(1) in set {coord(1)+1,...,a_coord(1)-1});
					)else(
						return (not exists p in set rng board.board & p <> nil and p.getCoord()(2) = coord(2)  and p.getCoord()(1) in set {a_coord(1)+1,...,coord(1)-1});
						)
			)
			
		)else(
		
		if (a_coord(1) - coord(1) =0)
			then(
					if(a_coord(2) > coord(2)) then(
						return (exists1 p in set rng board.board  & p <> nil and p.getCoord()(1) = coord(1)  and p.getCoord()(2) in set {coord(2)+1,...,a_coord(2)-1});
					)else(
						return (exists1 p in set rng board.board &  p <> nil and p.getCoord()(1) = coord(1)  and  p.getCoord()(2) in set {a_coord(2)+1,...,coord(2)-1});
						)
			)
			else(
					if(a_coord(1) > coord(1)) then(
						return (exists1 p in set rng board.board & p <> nil and p.getCoord()(2) = coord(2)  and p.getCoord()(1) in set {coord(1)+1,...,a_coord(1)-1});
					)else(
						return (exists1 p in set rng board.board & p <> nil and p.getCoord()(2) = coord(2)  and p.getCoord()(1) in set {a_coord(1)+1,...,coord(1)-1});
						)
			)
		
			
		)
	
	);
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Cannon
			
			